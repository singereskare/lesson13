def get_matrix(n, m, value):
    # Проверка на случай, если n или m <= 0
    if n <= 0 or m <= 0:
        return []

    # Как работает программа:
    # Объявление функции: Функция get_matrix принимает три параметра: n (число строк), m (число столбцов) и value (значение для заполнения матрицы).
    # Проверка параметров: Если n или m меньше или равны 0, функция возвращает пустой список.

    # Создаем пустой список для матрицы
    matrix = []

    # Как работает программа:
    # Создание матрицы:
    # Создается пустой список matrix для хранения строк матрицы.

    # Внешний цикл для создания строк матрицы
    for i in range(n):
        # Создаем пустую строку
        row = []

        # Как работает программа:
        # Создание матрицы:
        # Внешний цикл for проходит от 0 до n, создавая строки.
        
        # Внутренний цикл для добавления значений в строку
        for j in range(m):
            row.append(value)

        # Как работает программа:
        # Создание матрицы:
        # Внутренний цикл for проходит от 0 до m, добавляя значение value в текущую строку.
        
        # Добавляем строку в матрицу
        matrix.append(row)

        # Как работает программа:
        # Добавление строки в матрицу: После завершения внутреннего цикла строка добавляется в матрицу.    

    # Возвращаем созданную матрицу
    return matrix

    # Как работает программа:
    # Возврат результата: Функция возвращает заполненную матрицу.

# Примеры вызова функции
result1 = get_matrix(2, 2, 10)
result2 = get_matrix(3, 5, 42)
result3 = get_matrix(4, 2, 13)

# Как работает программа:
# Примеры вызова функции: В программе приводятся три примера вызова функции get_matrix с разными параметрами.

# Вывод результатов на экран
print(result1)
print(result2)
print(result3)
